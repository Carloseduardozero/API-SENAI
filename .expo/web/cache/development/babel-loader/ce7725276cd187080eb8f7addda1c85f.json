{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"../../services/Api\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport default function SearchController(name, birth, navigation) {\n  var response, getName, maximumSize, maximumValue, i, aux, decade, timePeriodOne, timePeriodTwo, period, _description, description;\n\n  return _regeneratorRuntime.async(function SearchController$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(api.get('/nomes/' + name));\n\n        case 2:\n          response = _context.sent;\n          getName = response.data[0].nome;\n          maximumSize = response.data[0].res.length;\n          maximumValue = response.data[0].res[0].frequencia;\n\n          for (i = 0; i < maximumSize; i++) {\n            aux = response.data[0].res[i].frequencia;\n\n            if (maximumValue < aux) {\n              decade = response.data[0].res[i].periodo;\n              maximumValue = aux;\n            }\n          }\n\n          timePeriodOne = decade.replace(/(\\D)/g, ',').split(',')[1];\n          timePeriodTwo = decade.replace(/(\\D)/g, ',').split(',')[2];\n          period = timePeriodOne + ' ' + timePeriodTwo;\n\n          if (!(timePeriodOne <= birth && timePeriodTwo >= birth)) {\n            _context.next = 15;\n            break;\n          }\n\n          _description = 'A sua década foi a que mais nasceu ' + getName;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('description', _description));\n\n        case 14:\n          return _context.abrupt(\"return\", navigation.navigate('Search', {\n            header: null\n          }));\n\n        case 15:\n          description = 'Os anos que mais nasceram ' + getName + ' foram ' + period;\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('description', description));\n\n        case 18:\n          return _context.abrupt(\"return\", navigation.navigate('Search', {\n            header: null\n          }));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["D:/Curso/atividade_mobile/juntar/API-SENAI/src/Controller/SearchController.js"],"names":["api","SearchController","name","birth","navigation","get","response","getName","data","nome","maximumSize","res","length","maximumValue","frequencia","i","aux","decade","periodo","timePeriodOne","replace","split","timePeriodTwo","period","description","AsyncStorage","setItem","navigate","header"],"mappings":";AAAA,OAAOA,GAAP;;AAGA,eAAe,SAAeC,gBAAf,CAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACYJ,GAAG,CAACK,GAAJ,CAAQ,YAAYH,IAApB,CADZ;;AAAA;AACLI,UAAAA,QADK;AAGLC,UAAAA,OAHK,GAGKD,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAHtB;AAKLC,UAAAA,WALK,GAKSJ,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,GAAjB,CAAqBC,MAL9B;AAMPC,UAAAA,YANO,GAMQP,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,GAAjB,CAAqB,CAArB,EAAwBG,UANhC;;AAQX,eAAQC,CAAR,GAAY,CAAZ,EAAeA,CAAC,GAAGL,WAAnB,EAAgCK,CAAC,EAAjC,EAAqC;AAC7BC,YAAAA,GAD6B,GACvBV,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,GAAjB,CAAqBI,CAArB,EAAwBD,UADD;;AAGjC,gBAAGD,YAAY,GAAGG,GAAlB,EAAuB;AACfC,cAAAA,MADe,GACNX,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,GAAjB,CAAqBI,CAArB,EAAwBG,OADlB;AAEnBL,cAAAA,YAAY,GAAGG,GAAf;AACH;AACJ;;AAEKG,UAAAA,aAjBK,GAiBWF,MAAM,CAACG,OAAP,CAAe,OAAf,EAAwB,GAAxB,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAjBX;AAkBLC,UAAAA,aAlBK,GAkBWL,MAAM,CAACG,OAAP,CAAe,OAAf,EAAwB,GAAxB,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAlBX;AAmBLE,UAAAA,MAnBK,GAmBIJ,aAAa,GAAG,GAAhB,GAAsBG,aAnB1B;;AAAA,gBAqBRH,aAAa,IAAIhB,KAAjB,IAA0BmB,aAAa,IAAInB,KArBnC;AAAA;AAAA;AAAA;;AAuBDqB,UAAAA,YAvBC,GAuBa,wCAAwCjB,OAvBrD;AAAA;AAAA,2CAyBDkB,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,YAApC,CAzBC;;AAAA;AAAA,2CA2BApB,UAAU,CAACuB,QAAX,CAAoB,QAApB,EAA8B;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAA9B,CA3BA;;AAAA;AA+BLJ,UAAAA,WA/BK,GA+BS,+BAA+BjB,OAA/B,GAAyC,SAAzC,GAAqDgB,MA/B9D;AAAA;AAAA,2CAgCLE,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,WAApC,CAhCK;;AAAA;AAAA,2CAkCJpB,UAAU,CAACuB,QAAX,CAAoB,QAApB,EAA8B;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAA9B,CAlCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import api from '../../services/Api';\r\nimport { AsyncStorage } from 'react-native';\r\n\r\nexport default async function SearchController(name, birth, navigation) {\r\n    const response = await api.get('/nomes/' + name);\r\n\r\n    const getName = response.data[0].nome;\r\n\r\n    const maximumSize = response.data[0].res.length;\r\n    let maximumValue = response.data[0].res[0].frequencia;\r\n\r\n    for(let i = 0; i < maximumSize; i++) {\r\n        var aux = response.data[0].res[i].frequencia;\r\n\r\n        if(maximumValue < aux) {\r\n            var decade = response.data[0].res[i].periodo;\r\n            maximumValue = aux;\r\n        }\r\n    }\r\n\r\n    const timePeriodOne = decade.replace(/(\\D)/g, ',').split(',')[1];\r\n    const timePeriodTwo = decade.replace(/(\\D)/g, ',').split(',')[2];\r\n    const period = timePeriodOne + ' ' + timePeriodTwo;\r\n\r\n    if(timePeriodOne <= birth && timePeriodTwo >= birth) {\r\n\r\n        const description = 'A sua década foi a que mais nasceu ' + getName;\r\n        \r\n        await AsyncStorage.setItem('description', description);\r\n\r\n        return navigation.navigate('Search', { header: null });\r\n    }\r\n\r\n\r\n    const description = 'Os anos que mais nasceram ' + getName + ' foram ' + period;\r\n    await AsyncStorage.setItem('description', description);\r\n\r\n    return navigation.navigate('Search', { header: null });\r\n}"]},"metadata":{},"sourceType":"module"}