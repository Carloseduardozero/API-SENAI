{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Curso\\\\atividade mobile\\\\juntar\\\\omnistack-mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport logoImg from \"../../assets/logo.png\";\nimport styles from \"./styles\";\nimport api from \"../../services/api\";\nexport default function Incidents() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length == total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('incidents', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }\n  }, total, \" casos\"))), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Bem vindo ao SENAI \"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Escolha um curso abaixo .\"), React.createElement(FlatList, {\n    data: incidents,\n    style: styles.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"curso:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"Mate:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Curso/atividade mobile/juntar/omnistack-mobile/src/pages/Incidents/index.js"],"names":["React","useState","useEffect","Feather","useNavigation","logoImg","styles","api","Incidents","navigation","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","navigateToDetail","incident","navigate","loadIncidents","length","get","params","response","data","headers","container","header","headerText","headerTextBold","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Feather} from '@expo/vector-icons';\r\nimport {View, FlatList, Image, Text, TouchableOpacity} from 'react-native';\r\nimport {useNavigation} from '@react-navigation/native'\r\nimport logoImg from '../../assets/logo.png';\r\nimport styles from './styles';\r\nimport api from '../../services/api';\r\n\r\nexport default function Incidents(){\r\n    const navigation = useNavigation();\r\n    const [incidents, setIncidents] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function navigateToDetail(incident){\r\n        navigation.navigate('Detail', {incident});\r\n    }\r\n    async function loadIncidents(){\r\n        if(loading){\r\n            return;\r\n        }\r\n        if(total>0 && incidents.length == total){\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const response = await api.get('incidents', {\r\n            params: {page}\r\n        });\r\n        \r\n        setIncidents([...incidents,...response.data]);\r\n        setTotal(response.headers['x-total-count']);\r\n        setPage(page+1);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        loadIncidents();\r\n    },[]);\r\n    return(\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Image source={logoImg} />\r\n                <Text style={styles.headerText}>\r\n                    Total de <Text style={styles.headerTextBold}>{total} casos</Text>   \r\n                </Text>\r\n            </View>\r\n            <Text style={styles.title}>Bem vindo ao SENAI </Text>\r\n            <Text style={styles.description}>Escolha um curso abaixo .</Text>\r\n            <FlatList\r\n                data={incidents}\r\n                style={styles.incidentList}\r\n                keyExtractor={incident => String(incident.id)}\r\n                showsVerticalScrollIndicator={false}\r\n                onEndReached={loadIncidents}\r\n                onEndReachedThreshold={0.2}\r\n                renderItem={({item:incident}) => (\r\n                    <View style={styles.incident}>\r\n                        <Text style={styles.incidentProperty}>curso:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.name}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>Mate:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.title}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>VALOR:</Text>\r\n                        <Text style={styles.incidentValue}>\r\n                            {\r\n                                Intl.NumberFormat('pt-BR',{\r\n                                style: 'currency', \r\n                                currency:'BRL'\r\n                                }).format(incident.value)\r\n                            }\r\n                        </Text>\r\n\r\n                        <TouchableOpacity \r\n                            style={styles.detailsButton}\r\n                            onPress={() => navigateToDetail(incident)}\r\n                        >\r\n                            <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n                            <Feather name=\"arrow-right\" size={16} color=\"#E02041\" />\r\n                        </TouchableOpacity>\r\n                    </View>                    \r\n                )}\r\n            />                        \r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}