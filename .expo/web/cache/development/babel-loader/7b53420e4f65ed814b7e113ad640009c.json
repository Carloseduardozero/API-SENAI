{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAreaView = SafeAreaView;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _SafeAreaContext = require(\"./SafeAreaContext\");\n\nvar _jsxFileName = \"/Users/janic/Developer/react-native-safe-area-context/src/SafeAreaView.tsx\";\nvar TOP = 8,\n    RIGHT = 8,\n    BOTTOM = 8,\n    LEFT = 8,\n    ALL = 15;\nvar edgeBitmaskMap = {\n  top: 8,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\n\nfunction SafeAreaView(_ref) {\n  var style = _ref.style,\n      _emulateUnlessSupported = _ref.emulateUnlessSupported,\n      edges = _ref.edges,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"emulateUnlessSupported\", \"edges\"]);\n  var insets = (0, _SafeAreaContext.useSafeAreaInsets)();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var _ref2 = _reactNative.StyleSheet.flatten(style),\n        _ref2$padding = _ref2.padding,\n        padding = _ref2$padding === void 0 ? 0 : _ref2$padding,\n        _ref2$paddingVertical = _ref2.paddingVertical,\n        paddingVertical = _ref2$paddingVertical === void 0 ? padding : _ref2$paddingVertical,\n        _ref2$paddingHorizont = _ref2.paddingHorizontal,\n        paddingHorizontal = _ref2$paddingHorizont === void 0 ? padding : _ref2$paddingHorizont,\n        _ref2$paddingTop = _ref2.paddingTop,\n        paddingTop = _ref2$paddingTop === void 0 ? paddingVertical : _ref2$paddingTop,\n        _ref2$paddingRight = _ref2.paddingRight,\n        paddingRight = _ref2$paddingRight === void 0 ? paddingHorizontal : _ref2$paddingRight,\n        _ref2$paddingBottom = _ref2.paddingBottom,\n        paddingBottom = _ref2$paddingBottom === void 0 ? paddingVertical : _ref2$paddingBottom,\n        _ref2$paddingLeft = _ref2.paddingLeft,\n        paddingLeft = _ref2$paddingLeft === void 0 ? paddingHorizontal : _ref2$paddingLeft;\n\n    var paddingStyle = {\n      paddingTop: paddingTop + (edgeBitmask & TOP ? insets.top : 0),\n      paddingRight: paddingRight + (edgeBitmask & RIGHT ? insets.right : 0),\n      paddingBottom: paddingBottom + (edgeBitmask & BOTTOM ? insets.bottom : 0),\n      paddingLeft: paddingLeft + (edgeBitmask & LEFT ? insets.left : 0)\n    };\n    return [style, paddingStyle];\n  }, [style, insets, edgeBitmask]);\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: appliedStyle\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["SafeAreaView.tsx"],"names":["TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","style","emulateUnlessSupported","_emulateUnlessSupported","edges","rest","insets","edgeBitmask","accum","appliedStyle","React","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","StyleSheet","paddingStyle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b1000,\n      BOTTOM = 0b1000,\n      LEFT   = 0b1000,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: 0b1000,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style,\n  emulateUnlessSupported: _emulateUnlessSupported,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const {\n      padding = 0,\n      paddingVertical = padding,\n      paddingHorizontal = padding,\n      paddingTop = paddingVertical,\n      paddingRight = paddingHorizontal,\n      paddingBottom = paddingVertical,\n      paddingLeft = paddingHorizontal,\n    } = StyleSheet.flatten(style) as Record<string, number>;\n\n    const paddingStyle = {\n      paddingTop: paddingTop + (edgeBitmask & TOP ? insets.top : 0),\n      paddingRight: paddingRight + (edgeBitmask & RIGHT ? insets.right : 0),\n      paddingBottom: paddingBottom + (edgeBitmask & BOTTOM ? insets.bottom : 0),\n      paddingLeft: paddingLeft + (edgeBitmask & LEFT ? insets.left : 0),\n    };\n\n    return [style, paddingStyle];\n  }, [style, insets, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"script"}